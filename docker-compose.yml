version: "3.9"

services:
  dataops_postgres:
    image: postgres:15
    container_name: dataops_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - dataops_data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 10

  dataops_dbt:
    image: ghcr.io/dbt-labs/dbt-postgres:1.7.4
    container_name: dataops_dbt
    depends_on:
      - dataops_postgres
    environment:
      DBT_PROFILES_DIR: /usr/app/dbt
    volumes:
      - ./datasets/nyc_taxi/dbt/nyc_taxi:/usr/app/dbt
      - ./datasets/nyc_taxi/dbt/profiles.yml:/usr/app/dbt/profiles.yml:ro
    working_dir: /usr/app/dbt

  dataops_airflow:
    build:
      context: .
      dockerfile: orchestration/Dockerfile
    container_name: dataops_airflow
    depends_on:
      dataops_postgres:
        condition: service_healthy
      dataops_dbt:
        condition: service_started
    environment:
      AIRFLOW__CORE__EXECUTOR: "SequentialExecutor"
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@dataops_postgres:5432/airflow
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/orchestration/dags
    volumes:
      - ../:/opt/airflow  # Mount entire repo for import resolution inside DAGs
    ports:
      - "8080:8080"
    entrypoint: ["bash", "/scripts/airflow-entrypoint.sh"]
    command: webserver

volumes:
  dataops_data:
